name: SonarCloud Code Analysis

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  pull-requests: read  # Allows SonarCloud to decorate PRs with analysis results

jobs:
  SonarCloud-Analysis:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [ nodejs, go, java, python, csharp ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Node.js setup and install dependencies
      - name: Set up Node.js for JavaScript/TypeScript projects
        if: matrix.language == 'nodejs'
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Node.js dependencies
        if: matrix.language == 'nodejs'
        run: |
          npm install
          npm run test -- --coverage  # Run tests and generate coverage report for Node.js

      # Go setup and install dependencies
      - name: Set up Go for Go projects
        if: matrix.language == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - name: Install Go dependencies
        if: matrix.language == 'go'
        run: |
          go mod tidy
          go test -coverprofile=coverage.out  # Run tests and generate coverage report for Go

      # Java setup and install dependencies
      - name: Set up JDK for Java projects
        if: matrix.language == 'java'
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Install Java dependencies
        if: matrix.language == 'java'
        run: |
          ./gradlew build -x test
          ./gradlew jacocoTestReport  # Run tests and generate Jacoco coverage report for Java

      # Python setup and install dependencies
      - name: Set up Python for Python projects
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        if: matrix.language == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest --cov --cov-report=xml  # Run tests and generate coverage report for Python

      # C# setup and install dependencies
      - name: Set up .NET for C# projects
        if: matrix.language == 'csharp'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: Install C# dependencies
        if: matrix.language == 'csharp'
        run: |
          dotnet restore
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover  # Run tests and generate coverage report for C#

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.ORIGINAL_GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # SonarCloud token stored in secrets
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # SonarCloud URL stored in secrets
        with:
          args: |
            -Dsonar.projectKey="Shaheer4636_google-microservices-poc"
            -Dsonar.organization=shaheer4636
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info  # For Node.js coverage report
            -Dsonar.go.coverage.reportPaths=coverage.out  # For Go coverage report
            -Dsonar.java.coveragePlugin=jacoco  # For Java coverage report
            -Dsonar.python.coverage.reportPaths=coverage.xml  # For Python coverage report
            -Dsonar.cs.vscoveragexml.reportsPaths=**/*.coveragexml  # For C# coverage report
